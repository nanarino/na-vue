---
import parse from "style-to-object"
import dedent from "dedent"

interface Props {
    class?: string
}

const props = Astro.props

let code: string = ""
if (Astro.slots.has("default")) {
    code = await Astro.slots.render("default") // astro:components
    // pre[style]
    code = code.replace(
        /<pre .*?>/,
        `<pre class="na-pre ${props.class ?? ""}">`
    )
    // pre > code
    code = code.replace("<code>", '<code class="na-code">')
    // pre > code > .line > span[style]
    code = code.replace(/<span style="(.*?)">/gim, (span, cssText: string) => {
        const style = parse(cssText)
        const light = style?.color
        const dark = style?.["--shiki-dark"]
        if (light && dark) {
            return dedent`<span style="
                --color-code: from ${light} r g b;
                --color-code-dark: from ${dark} r g b;
            ">`
        }
        return span
    })
}
---

<Fragment set:html={code} />
